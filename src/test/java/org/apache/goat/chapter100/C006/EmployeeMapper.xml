<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">


<mapper namespace="org.apache.goat.chapter100.C006.EmployeeMapper">

  <!--
       获取非自增主键的值：  Oracle不支持自增；Oracle使用序列来模拟自增；  获取非自增主键的值：  Oracle不支持自增；Oracle使用序列来模拟自增；
   -->

  <!-- 1.先拿到待插入的序列id后 再进行插入数据库-->
  <insert id="addEmp" databaseId="oracle">
    <!--
        keyProperty:   查出的主键值封装给javaBean的哪个属性
        order="BEFORE":当前sql在插入sql之前运行 AFTER：当前sql在插入sql之后运行
        resultType:    查出的数据的返回值类型
        BEFORE运行顺序： 先运行selectKey查询id的sql；查出id值封装给javaBean的id属性  在运行插入的sql；就可以取出id属性对应的值
        AFTER运行顺序： 先运行插入的sql（从序列中取出新值作为id）；  再运行selectKey查询id的sql；
         -->
    <selectKey keyProperty="id" order="BEFORE" resultType="Integer">
      select EMPLOYEES_SEQ.nextval from dual  <!-- 查询下一个待插入的主键序列id -->
    </selectKey>
    insert into employees(EMPLOYEE_ID,LAST_NAME,EMAIL)
    values(#{id},#{lastName},#{email})
  </insert>


  <!-- 2.先插入数据库后，再查询出已经插入记录的主键id   注意： 该种情况再多线程情况下容易出现问题  还是推荐使用 BEFORE 方式 -->
  <insert id="addEmp" databaseId="oracle">
    <selectKey keyProperty="id" order="AFTER" resultType="Integer">
      select EMPLOYEES_SEQ.currval from dual  <!-- 查询当前最大的序列id -->
    </selectKey>
    insert into employees(EMPLOYEE_ID,LAST_NAME,EMAIL)
    values(EMPLOYEES_SEQ.nextval,#{lastName},#{email})
  </insert>
</mapper>
