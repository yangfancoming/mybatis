<?xml version="1.0" encoding="UTF-8" ?>

<!DOCTYPE configuration PUBLIC "-//mybatis.org//DTD Config 3.0//EN"   "http://mybatis.org/dtd/mybatis-3-config.dtd">

<configuration>

  <!--
        1、mybatis可以使用properties来引入外部properties配置文件的内容；
        resource：引入类路径下的资源
        url：引入网络路径或者磁盘路径下的资源

  propertiesElement 方法是先解析<properties>节点的子节点(<property>)内容，
  然后再从文件系统(resource)或者网络(url)读取属性配置，并将所有的属性及属性值都放入到 defaults 属性对象中。
  这会导致同名属性覆盖的问题，也就是从文件系统，或者网络上读取到的属性和属性值会覆盖掉<properties>子节点中同名的属性和值

  例如： 下面  <property name="jdbc.username" value="what"/> 子节点属性将会被 <properties resource="jdbc.properties">
  配置文件中的   jdbc.username=root 覆盖掉！ 即：resource 和 url 属性的优先级更高！
  doit 没理解是怎么互相覆盖的？？？
      -->
  <properties resource="A022.properties">
    <property name="jdbc.driver" value="bar"/>
    <property name="jdbc.url" value="foo"/>
    <property name="jdbc.username" value="bar"/>
    <property name="jdbc.password" value="foo"/>
  </properties>

  <environments default="development">
    <environment id="development">

      <transactionManager type="JDBC"/>

      <dataSource type="POOLED">

        <!-- driver 和 url 属性将会由 A022.properties 文件中对应的值来替换-->
        <property name="driver" value="${jdbc.driver}" />
        <property name="url" value="${jdbc.url}" />

        <!--<property name="driver" value="" />-->
        <!--<property name="url" value="" />-->

        <!-- username 和 password 将会由 properties 元素中设置的相应值来替换-->
        <property name="username" value="root" />
        <property name="password" value="12345" />
      </dataSource>

    </environment>

  </environments>

  <mappers>
    <mapper resource="org/apache/goat/chapter100/A/A030/Foo.xml" />
  </mappers>
</configuration>

